#
# Copyright 2019 StreamSets Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

upgraderVersion: 1

# No upgrade rules defined
upgrades:
  - toVersion: 4
    actions:
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.securityOption
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: security.protocol
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: security.protocol
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.kerberosServiceName
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: sasl.kerberos.service.name
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: sasl.kerberos.service.name
      - renameConfig:
          oldNamePattern: kafkaTargetConfig.provideKeytab
          newNamePattern: kafkaTargetConfig.connectionConfig.connection.securityConfig.provideKeytab
      - renameConfig:
          oldNamePattern: kafkaTargetConfig.userKeytab
          newNamePattern: kafkaTargetConfig.connectionConfig.connection.securityConfig.userKeytab
      - renameConfig:
          oldNamePattern: kafkaTargetConfig.userPrincipal
          newNamePattern: kafkaTargetConfig.connectionConfig.connection.securityConfig.userPrincipal
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.truststoreType
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.type
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.type
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.truststoreFile
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.location
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.location
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.truststorePassword
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.password
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.truststore.password
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.keystoreType
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.type
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.type
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.keystoreFile
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.location
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.location
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.keystorePassword
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.password
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.keystore.password
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.keyPassword
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.key.password
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.key.password
      - setConfigFromStringMap:
          name: kafkaTargetConfig.connectionConfig.connection.securityConfig.enabledProtocols
          mapName: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.enabled.protocols
      - configStringMapRemove:
          name: kafkaTargetConfig.kafkaProducerConfigs
          key: ssl.enabled.protocols
      - renameConfig:
          oldNamePattern: kafkaTargetConfig.metadataBrokerList
          newNamePattern: kafkaTargetConfig.connectionConfig.connection.metadataBrokerList
